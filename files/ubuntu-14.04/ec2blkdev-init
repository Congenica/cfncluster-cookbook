#! /bin/sh
### BEGIN INIT INFO
# Provides:          ec2blkdev
# Required-Start:    $network
# Short-Description: ec2blkdev
# Description:       Script to call udevadm to setup any links to 
#                    devices already attached at instance launch
### END INIT INFO

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="Triggers a re-read of the EBS volumes and populates /dev/disk/by-ebs-volumeid"
NAME=ec2blkdev
PROG=/sbin/udevadm
SCRIPTNAME=/etc/init.d/$NAME

# Exit if the package is not installed
[ -x "$PROG" ] || exit 0

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions

do_start() {
    echo -n $"Starting ec2blkdev: "
    $PROG trigger --action=change --subsystem-match=block
    retval=$?
    sleep 15 # Wait for EC2 API calls to complete
    echo
    return $retval
}

do_stop() {
    return
}

case "$1" in
  start)
	[ "$VERBOSE" != no ] && log_daemon_msg "Starting $DESC" "$NAME"
	do_start
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  stop)
	[ "$VERBOSE" != no ] && log_daemon_msg "Stopping $DESC" "$NAME"
	do_stop
	case "$?" in
		0|1) [ "$VERBOSE" != no ] && log_end_msg 0 ;;
		2) [ "$VERBOSE" != no ] && log_end_msg 1 ;;
	esac
	;;
  *)
	#echo "Usage: $SCRIPTNAME {start|stop|restart|reload|force-reload}" >&2
	echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
	exit 3
	;;
esac

# vim: noet ts=8